/**
 * Visma-Sign API
 * Swagger documentation for Visma-Sign API.
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Affiliate', 'model/AuthenticationMethod', 'model/AuthenticationMethods', 'model/BadRequest', 'model/Categories', 'model/Category', 'model/Document', 'model/DocumentDocument', 'model/DocumentFile', 'model/DocumentInvitationStatus', 'model/DocumentSearchResult', 'model/DocumentStatus', 'model/Forbidden', 'model/InlineResponse200', 'model/InternalServerError', 'model/InvitationCreate', 'model/InvitationCreateInviter', 'model/InvitationCreateMessages', 'model/InvitationCreateOrder', 'model/InvitationCreateResponse', 'model/InvitationFullfillment', 'model/InvitationStatus', 'model/InvitationStatusDocument', 'model/InviteeGroup', 'model/InviteeGroupEntry', 'model/InviteeGroups', 'model/NotFound', 'model/NotImplemented', 'model/SavedEmailMessage', 'model/SavedEmailMessages', 'model/SavedSmsMessage', 'model/SavedSmsMessages', 'api/AuthenticationsApi', 'api/CategoriesApi', 'api/DocumentsApi', 'api/FilesApi', 'api/InvitationsApi', 'api/InviteeGroupsApi', 'api/SavedInvitationMessagesApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Affiliate'), require('./model/AuthenticationMethod'), require('./model/AuthenticationMethods'), require('./model/BadRequest'), require('./model/Categories'), require('./model/Category'), require('./model/Document'), require('./model/DocumentDocument'), require('./model/DocumentFile'), require('./model/DocumentInvitationStatus'), require('./model/DocumentSearchResult'), require('./model/DocumentStatus'), require('./model/Forbidden'), require('./model/InlineResponse200'), require('./model/InternalServerError'), require('./model/InvitationCreate'), require('./model/InvitationCreateInviter'), require('./model/InvitationCreateMessages'), require('./model/InvitationCreateOrder'), require('./model/InvitationCreateResponse'), require('./model/InvitationFullfillment'), require('./model/InvitationStatus'), require('./model/InvitationStatusDocument'), require('./model/InviteeGroup'), require('./model/InviteeGroupEntry'), require('./model/InviteeGroups'), require('./model/NotFound'), require('./model/NotImplemented'), require('./model/SavedEmailMessage'), require('./model/SavedEmailMessages'), require('./model/SavedSmsMessage'), require('./model/SavedSmsMessages'), require('./api/AuthenticationsApi'), require('./api/CategoriesApi'), require('./api/DocumentsApi'), require('./api/FilesApi'), require('./api/InvitationsApi'), require('./api/InviteeGroupsApi'), require('./api/SavedInvitationMessagesApi'));
  }
}(function(ApiClient, Affiliate, AuthenticationMethod, AuthenticationMethods, BadRequest, Categories, Category, Document, DocumentDocument, DocumentFile, DocumentInvitationStatus, DocumentSearchResult, DocumentStatus, Forbidden, InlineResponse200, InternalServerError, InvitationCreate, InvitationCreateInviter, InvitationCreateMessages, InvitationCreateOrder, InvitationCreateResponse, InvitationFullfillment, InvitationStatus, InvitationStatusDocument, InviteeGroup, InviteeGroupEntry, InviteeGroups, NotFound, NotImplemented, SavedEmailMessage, SavedEmailMessages, SavedSmsMessage, SavedSmsMessages, AuthenticationsApi, CategoriesApi, DocumentsApi, FilesApi, InvitationsApi, InviteeGroupsApi, SavedInvitationMessagesApi) {
  'use strict';

  /**
   * Swagger_documentation_for_Visma_Sign_API_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var VismaSignClient = require('index'); // See note below*.
   * var xxxSvc = new VismaSignClient.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new VismaSignClient.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new VismaSignClient.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new VismaSignClient.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 0.0.5
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Affiliate model constructor.
     * @property {module:model/Affiliate}
     */
    Affiliate: Affiliate,
    /**
     * The AuthenticationMethod model constructor.
     * @property {module:model/AuthenticationMethod}
     */
    AuthenticationMethod: AuthenticationMethod,
    /**
     * The AuthenticationMethods model constructor.
     * @property {module:model/AuthenticationMethods}
     */
    AuthenticationMethods: AuthenticationMethods,
    /**
     * The BadRequest model constructor.
     * @property {module:model/BadRequest}
     */
    BadRequest: BadRequest,
    /**
     * The Categories model constructor.
     * @property {module:model/Categories}
     */
    Categories: Categories,
    /**
     * The Category model constructor.
     * @property {module:model/Category}
     */
    Category: Category,
    /**
     * The Document model constructor.
     * @property {module:model/Document}
     */
    Document: Document,
    /**
     * The DocumentDocument model constructor.
     * @property {module:model/DocumentDocument}
     */
    DocumentDocument: DocumentDocument,
    /**
     * The DocumentFile model constructor.
     * @property {module:model/DocumentFile}
     */
    DocumentFile: DocumentFile,
    /**
     * The DocumentInvitationStatus model constructor.
     * @property {module:model/DocumentInvitationStatus}
     */
    DocumentInvitationStatus: DocumentInvitationStatus,
    /**
     * The DocumentSearchResult model constructor.
     * @property {module:model/DocumentSearchResult}
     */
    DocumentSearchResult: DocumentSearchResult,
    /**
     * The DocumentStatus model constructor.
     * @property {module:model/DocumentStatus}
     */
    DocumentStatus: DocumentStatus,
    /**
     * The Forbidden model constructor.
     * @property {module:model/Forbidden}
     */
    Forbidden: Forbidden,
    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200: InlineResponse200,
    /**
     * The InternalServerError model constructor.
     * @property {module:model/InternalServerError}
     */
    InternalServerError: InternalServerError,
    /**
     * The InvitationCreate model constructor.
     * @property {module:model/InvitationCreate}
     */
    InvitationCreate: InvitationCreate,
    /**
     * The InvitationCreateInviter model constructor.
     * @property {module:model/InvitationCreateInviter}
     */
    InvitationCreateInviter: InvitationCreateInviter,
    /**
     * The InvitationCreateMessages model constructor.
     * @property {module:model/InvitationCreateMessages}
     */
    InvitationCreateMessages: InvitationCreateMessages,
    /**
     * The InvitationCreateOrder model constructor.
     * @property {module:model/InvitationCreateOrder}
     */
    InvitationCreateOrder: InvitationCreateOrder,
    /**
     * The InvitationCreateResponse model constructor.
     * @property {module:model/InvitationCreateResponse}
     */
    InvitationCreateResponse: InvitationCreateResponse,
    /**
     * The InvitationFullfillment model constructor.
     * @property {module:model/InvitationFullfillment}
     */
    InvitationFullfillment: InvitationFullfillment,
    /**
     * The InvitationStatus model constructor.
     * @property {module:model/InvitationStatus}
     */
    InvitationStatus: InvitationStatus,
    /**
     * The InvitationStatusDocument model constructor.
     * @property {module:model/InvitationStatusDocument}
     */
    InvitationStatusDocument: InvitationStatusDocument,
    /**
     * The InviteeGroup model constructor.
     * @property {module:model/InviteeGroup}
     */
    InviteeGroup: InviteeGroup,
    /**
     * The InviteeGroupEntry model constructor.
     * @property {module:model/InviteeGroupEntry}
     */
    InviteeGroupEntry: InviteeGroupEntry,
    /**
     * The InviteeGroups model constructor.
     * @property {module:model/InviteeGroups}
     */
    InviteeGroups: InviteeGroups,
    /**
     * The NotFound model constructor.
     * @property {module:model/NotFound}
     */
    NotFound: NotFound,
    /**
     * The NotImplemented model constructor.
     * @property {module:model/NotImplemented}
     */
    NotImplemented: NotImplemented,
    /**
     * The SavedEmailMessage model constructor.
     * @property {module:model/SavedEmailMessage}
     */
    SavedEmailMessage: SavedEmailMessage,
    /**
     * The SavedEmailMessages model constructor.
     * @property {module:model/SavedEmailMessages}
     */
    SavedEmailMessages: SavedEmailMessages,
    /**
     * The SavedSmsMessage model constructor.
     * @property {module:model/SavedSmsMessage}
     */
    SavedSmsMessage: SavedSmsMessage,
    /**
     * The SavedSmsMessages model constructor.
     * @property {module:model/SavedSmsMessages}
     */
    SavedSmsMessages: SavedSmsMessages,
    /**
     * The AuthenticationsApi service constructor.
     * @property {module:api/AuthenticationsApi}
     */
    AuthenticationsApi: AuthenticationsApi,
    /**
     * The CategoriesApi service constructor.
     * @property {module:api/CategoriesApi}
     */
    CategoriesApi: CategoriesApi,
    /**
     * The DocumentsApi service constructor.
     * @property {module:api/DocumentsApi}
     */
    DocumentsApi: DocumentsApi,
    /**
     * The FilesApi service constructor.
     * @property {module:api/FilesApi}
     */
    FilesApi: FilesApi,
    /**
     * The InvitationsApi service constructor.
     * @property {module:api/InvitationsApi}
     */
    InvitationsApi: InvitationsApi,
    /**
     * The InviteeGroupsApi service constructor.
     * @property {module:api/InviteeGroupsApi}
     */
    InviteeGroupsApi: InviteeGroupsApi,
    /**
     * The SavedInvitationMessagesApi service constructor.
     * @property {module:api/SavedInvitationMessagesApi}
     */
    SavedInvitationMessagesApi: SavedInvitationMessagesApi
  };

  return exports;
}));
